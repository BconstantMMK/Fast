C        Generated by TAPENADE     (INRIA, Ecuador team)
C  Tapenade 3.13 (r6666M) - 28 May 2018 09:28
C
C  Differentiation of bvbs_periodique in forward (tangent) mode:
C   variations   of useful results: rop
C   with respect to varying inputs: rop
C   RW status of diff variables: rop:in-out
C
C
C
C
C
C
C
C
C
C
C
C***********************************************************************
C     $Date: 2010-01-28 16:22:02 +0100 (Thu, 28 Jan 2010) 
C     $ $Revision: 56 $ 
C     $Author: IvanMary $
C*****a*****************************************************************
      SUBROUTINE BVBS_PERIODIQUE_D(idir, lrhs, param_int, ind_loop, rop
     +                             , ropd)
      IMPLICIT NONE
C
C mise a zero si tableau drodm du RHS implicit
C
C
C      write(*,*)'idir=', idir,inc1,nijk(4),nijk(5),ndimdx
C      write(*,*)'nijk=', nijk
C      write(*,*)'loop=', ind_loop
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
      INTEGER*4 idir, lrhs, ind_loop(6), param_int(0:*)
C
      REAL*8 rop(param_int(41), param_int(36))
      REAL*8 ropd(param_int(41), param_int(36))
C
C Var local
      INTEGER*4 l, ijkm, im, jm, km, ldjr, i, j, k, inc1, ne, lij
      REAL*8 c1
C
C    adresse point courant pour tableau de la taille d'un domaine 
      INTEGER*4 inddm, i_1, j_1, k_1
C
      IF (lrhs .EQ. 1) THEN
        c1 = 0.
      ELSE
Cextrapolation ordre 0 si variable conservative ou primitive
        c1 = 1.
      END IF
C
      IF (idir .EQ. 1 .OR. idir .EQ. 2) THEN
C
        inc1 = param_int(20)
        IF (idir .EQ. 2) inc1 = -param_int(20)
C
        DO ne=1,param_int(36)
          DO k=ind_loop(5),ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
              DO i=ind_loop(1),ind_loop(2)
C
                ldjr = 1 + (inc1+i+param_int(0+3)-1) + (j+param_int(0+3)
     +            -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
C
                ropd(l, ne) = c1*ropd(ldjr, ne)
              ENDDO
            ENDDO
          ENDDO
        ENDDO
      ELSE IF (idir .EQ. 3 .OR. idir .EQ. 4) THEN
C
C
        inc1 = param_int(20+1)*param_int(0)
        IF (idir .EQ. 4) inc1 = -inc1
C
        DO k=ind_loop(5),ind_loop(6)
          DO j=ind_loop(3),ind_loop(4)
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+3)
     +        -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +        param_int(0+1)
C
CDIR$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
C
              ldjr = l + inc1
C
              ropd(l, 1) = c1*ropd(ldjr, 1)
              ropd(l, 2) = c1*ropd(ldjr, 2)
              ropd(l, 3) = c1*ropd(ldjr, 3)
              ropd(l, 4) = c1*ropd(ldjr, 4)
              ropd(l, 5) = c1*ropd(ldjr, 5)
            ENDDO
            IF (param_int(36) .GE. 6) THEN
              DO ne=6,param_int(36)
CDIR$ IVDEP
                DO l=lij,lij+ind_loop(2)-ind_loop(1)
C
                  ldjr = l + inc1
                  ropd(l, ne) = c1*ropd(ldjr, ne)
                ENDDO
              ENDDO
            END IF
          ENDDO
        ENDDO
      ELSE
C
C
C
        inc1 = param_int(20+2)*param_int(0)*param_int(0+1)
        IF (idir .EQ. 6) inc1 = -inc1
C
        DO k=ind_loop(5),ind_loop(6)
          DO j=ind_loop(3),ind_loop(4)
C
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+3)
     +        -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +        param_int(0+1)
C
CDIR$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
C
              ldjr = l + inc1
C
              ropd(l, 1) = c1*ropd(ldjr, 1)
              ropd(l, 2) = c1*ropd(ldjr, 2)
              ropd(l, 3) = c1*ropd(ldjr, 3)
              ropd(l, 4) = c1*ropd(ldjr, 4)
              ropd(l, 5) = c1*ropd(ldjr, 5)
            ENDDO
C
            IF (param_int(36) .GE. 6) THEN
              DO ne=6,param_int(36)
CDIR$ IVDEP
                DO l=lij,lij+ind_loop(2)-ind_loop(1)
C
                  ldjr = l + inc1
                  ropd(l, ne) = c1*ropd(ldjr, ne)
                ENDDO
              ENDDO
            END IF
          ENDDO
        ENDDO
      END IF
      END

