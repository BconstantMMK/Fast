C        Generated by TAPENADE     (INRIA, Ecuador team)
C  Tapenade 3.13 (r6666M) - 28 May 2018 09:28
C
C  Differentiation of bvbs_inflow_supersonic in forward (tangent) mode:
C   variations   of useful results: rop
C   with respect to varying inputs: rop
C   RW status of diff variables: rop:in-out
C
C
C
C
C
C
C
C
C
C
C
C***********************************************************************
C     $Date: 2013-08-26 16:00:23 +0200 (lun. 26 ao√ªt 2013) $
C     $Revision: 35 $
C     $Author: IvanMary $
C***********************************************************************
      SUBROUTINE BVBS_INFLOW_SUPERSONIC_D(idir, lrhs, neq_mtr, param_int
     +                                    , ind_loop, param_real, c4, c5
     +                                    , c6, ventijk, tijk, rop, ropd
     +                                    , state)
      IMPLICIT NONE
C
C!! premiere rangee = state
C!! rangee suivante pour que : Phi_L + Phi_R = 2 * state
C
Ci
Cj
Ck
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
      INTEGER*4 idir, lrhs, neq_mtr, ind_loop(6), param_int(0:*)
C
      REAL*8 rop(param_int(41), param_int(36))
      REAL*8 ropd(param_int(41), param_int(36))
      REAL*8 ventijk(param_int(44), param_int(40))
      REAL*8 tijk(param_int(43), neq_mtr)
      REAL*8 state(param_int(36))
      REAL*8 c4, c5, c6, param_real(0:*)
C
C Var local
      INTEGER*4 l, l0, incj, inck, lij, lr, lp, i, j, k, l1, l2, inci
      REAL*8 ro, u, v, w, t, nut, c0, c1, c2, c3
C
C    adresse point courant pour tableau de la taille d'un domaine 
      INTEGER_E inddm, i_1, j_1, k_1
      INTRINSIC ABS
      REAL*8 abs0
      REAL*8 abs1
      REAL*8 abs2
      REAL*8 abs3
      REAL*8 abs4
      REAL*8 abs5
C
C
C
      ro = state(1)
      u = state(2)/state(1)
      v = state(3)/state(1)
      w = state(4)/state(1)
      t = (state(5)-0.5*ro*(u*u+v*v+w*w))/(ro*param_real(2))
C
Cwrite(*,'(a,5f18.12)')'state', ro,u,v,w,t
      IF (param_int(36) .EQ. 6) nut = state(6)/state(1)
C
C
      c0 = 1./c6
      c1 = -((c4+c5)*c0)
      c2 = -(c6*c0)
      c3 = (2.-c5-c4)*c0
Cidir
C
C
      IF (idir .EQ. 1) THEN
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO k=ind_loop(5),ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
C
              l = 1 + (ind_loop(2)+param_int(0+3)-1) + (j+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
C
              l0 = l
              l1 = l + 1
              l2 = l + 2
              DO i=ind_loop(1),ind_loop(2)-1
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs0 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs0 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs0 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
C
C
          DO k=ind_loop(5),ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
C
              l = 1 + (ind_loop(2)+param_int(0+3)-1) + (j+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
              ropd(l, 6) = 0.D0
C
              l0 = l
              l1 = l + 1
              l2 = l + 2
              DO i=ind_loop(1),ind_loop(2)-1
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE IF (idir .EQ. 2) THEN
C
C
C
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO k=ind_loop(5),ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
C
              l = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
C
              l0 = l
              l1 = l - 1
              l2 = l - 2
              DO i=ind_loop(1)+1,ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs1 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs1 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs1 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
C
C
          DO k=ind_loop(5),ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
C
              l = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
              ropd(l, 6) = 0.D0
C
              l0 = l
              l1 = l - 1
              l2 = l - 2
              DO i=ind_loop(1)+1,ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE IF (idir .EQ. 3) THEN
C
C
C
C
C
        incj = param_int(0)
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO k=ind_loop(5),ind_loop(6)
C
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (ind_loop(4)+
     +        param_int(0+3)-1)*param_int(0) + (k+param_int(0+4)-1)*
     +        param_int(0)*param_int(0+1)
CDEC$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
            ENDDO
Ci
C
            DO j=ind_loop(3),ind_loop(4)-1
C
              lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+
     +          3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lr = lij - (1+(ind_loop(1)+param_int(0+3)-1)+(ind_loop(4)+
     +          param_int(0+3)-1)*param_int(0)+(k+param_int(0+4)-1)*
     +          param_int(0)*param_int(0+1))
CDEC$ IVDEP
              DO l=lij,lij+ind_loop(2)-ind_loop(1)
                l0 = l - lr
                l1 = l0 + incj
                l2 = l0 + 2*incj
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs2 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs2 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs2 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
Ci
Cj
Ck
C
C
          DO k=ind_loop(5),ind_loop(6)
C
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (ind_loop(4)+
     +        param_int(0+3)-1)*param_int(0) + (k+param_int(0+4)-1)*
     +        param_int(0)*param_int(0+1)
CDEC$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
              ropd(l, 6) = 0.D0
            ENDDO
Ci
C
            DO j=ind_loop(3),ind_loop(4)-1
C
              lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+
     +          3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lr = lij - (1+(ind_loop(1)+param_int(0+3)-1)+(ind_loop(4)+
     +          param_int(0+3)-1)*param_int(0)+(k+param_int(0+4)-1)*
     +          param_int(0)*param_int(0+1))
CDEC$ IVDEP
              DO l=lij,lij+ind_loop(2)-ind_loop(1)
                l0 = l - lr
                l1 = l0 + incj
                l2 = l0 + 2*incj
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE IF (idir .EQ. 4) THEN
C
Ci
Cj
Ck
C
C
C
        incj = -param_int(0)
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO k=ind_loop(5),ind_loop(6)
C
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (ind_loop(3)+
     +        param_int(0+3)-1)*param_int(0) + (k+param_int(0+4)-1)*
     +        param_int(0)*param_int(0+1)
CDEC$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
            ENDDO
Ci
C
            DO j=ind_loop(3)+1,ind_loop(4)
C
              lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+
     +          3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lr = lij - (1+(ind_loop(1)+param_int(0+3)-1)+(ind_loop(3)+
     +          param_int(0+3)-1)*param_int(0)+(k+param_int(0+4)-1)*
     +          param_int(0)*param_int(0+1))
CDEC$ IVDEP
              DO l=lij,lij+ind_loop(2)-ind_loop(1)
                l0 = l - lr
                l1 = l0 + incj
                l2 = l0 + 2*incj
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs3 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs3 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs3 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
Ci
Cj
Ck
C
C
          DO k=ind_loop(5),ind_loop(6)
C
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (ind_loop(3)+
     +        param_int(0+3)-1)*param_int(0) + (k+param_int(0+4)-1)*
     +        param_int(0)*param_int(0+1)
CDEC$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
              ropd(l, 6) = 0.D0
            ENDDO
Ci
C
            DO j=ind_loop(3)+1,ind_loop(4)
C
              lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+
     +          3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lr = lij - (1+(ind_loop(1)+param_int(0+3)-1)+(ind_loop(3)+
     +          param_int(0+3)-1)*param_int(0)+(k+param_int(0+4)-1)*
     +          param_int(0)*param_int(0+1))
CDEC$ IVDEP
              DO l=lij,lij+ind_loop(2)-ind_loop(1)
                l0 = l - lr
                l1 = l0 + incj
                l2 = l0 + 2*incj
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE IF (idir .EQ. 5) THEN
C
Ci
Cj
Ck
C
C
C
C
C
        inck = param_int(0)*param_int(0+1)
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO j=ind_loop(3),ind_loop(4)
C
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (ind_loop(4)+
     +        param_int(0+3)-1)*param_int(0) + (ind_loop(6)+param_int(0+
     +        4)-1)*param_int(0)*param_int(0+1)
CDEC$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
            ENDDO
          ENDDO
Ci
Cj
C
          DO k=ind_loop(5),ind_loop(6)-1
C
            DO j=ind_loop(3),ind_loop(4)
C
              lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+
     +          3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lr = lij - (1+(ind_loop(1)+param_int(0+3)-1)+(j+param_int(
     +          0+3)-1)*param_int(0)+(ind_loop(6)+param_int(0+4)-1)*
     +          param_int(0)*param_int(0+1))
CDEC$ IVDEP
              DO l=lij,lij+ind_loop(2)-ind_loop(1)
                l0 = l - lr
                l1 = l0 + inck
                l2 = l0 + 2*inck
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs4 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs4 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs4 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
Ci
Cj
Ck
C
C
          DO j=ind_loop(3),ind_loop(4)
C
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (ind_loop(4)+
     +        param_int(0+3)-1)*param_int(0) + (ind_loop(6)+param_int(0+
     +        4)-1)*param_int(0)*param_int(0+1)
CDEC$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
              ropd(l, 6) = 0.D0
            ENDDO
          ENDDO
Ci
Cj
C
          DO k=ind_loop(5),ind_loop(6)-1
C
            DO j=ind_loop(3),ind_loop(4)
C
              lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+
     +          3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lr = lij - (1+(ind_loop(1)+param_int(0+3)-1)+(j+param_int(
     +          0+3)-1)*param_int(0)+(ind_loop(6)+param_int(0+4)-1)*
     +          param_int(0)*param_int(0+1))
CDEC$ IVDEP
              DO l=lij,lij+ind_loop(2)-ind_loop(1)
                l0 = l - lr
                l1 = l0 + inck
                l2 = l0 + 2*inck
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE
C
Ci
Cj
Ck
C
C
C
        inck = -(param_int(0)*param_int(0+1))
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO j=ind_loop(3),ind_loop(4)
C
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (ind_loop(4)+
     +        param_int(0+3)-1)*param_int(0) + (ind_loop(5)+param_int(0+
     +        4)-1)*param_int(0)*param_int(0+1)
CDEC$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
            ENDDO
          ENDDO
Ci
Cj
C
          DO k=ind_loop(5)+1,ind_loop(6)
C
            DO j=ind_loop(3),ind_loop(4)
C
              lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+
     +          3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lr = lij - (1+(ind_loop(1)+param_int(0+3)-1)+(j+param_int(
     +          0+3)-1)*param_int(0)+(ind_loop(5)+param_int(0+4)-1)*
     +          param_int(0)*param_int(0+1))
CDEC$ IVDEP
              DO l=lij,lij+ind_loop(2)-ind_loop(1)
                l0 = l - lr
                l1 = l0 + inck
                l2 = l0 + 2*inck
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs5 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs5 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs5 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
Ci
Cj
Ck
C
C
          DO j=ind_loop(3),ind_loop(4)
C
            lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (ind_loop(4)+
     +        param_int(0+3)-1)*param_int(0) + (ind_loop(5)+param_int(0+
     +        4)-1)*param_int(0)*param_int(0+1)
CDEC$ IVDEP
            DO l=lij,lij+ind_loop(2)-ind_loop(1)
              ropd(l, 1) = 0.D0
              ropd(l, 2) = 0.D0
              ropd(l, 3) = 0.D0
              ropd(l, 4) = 0.D0
              ropd(l, 5) = 0.D0
              ropd(l, 6) = 0.D0
            ENDDO
          ENDDO
Ci
Cj
C
          DO k=ind_loop(5)+1,ind_loop(6)
C
            DO j=ind_loop(3),ind_loop(4)
C
              lij = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+
     +          3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lr = lij - (1+(ind_loop(1)+param_int(0+3)-1)+(j+param_int(
     +          0+3)-1)*param_int(0)+(ind_loop(5)+param_int(0+4)-1)*
     +          param_int(0)*param_int(0+1))
CDEC$ IVDEP
              DO l=lij,lij+ind_loop(2)-ind_loop(1)
                l0 = l - lr
                l1 = l0 + inck
                l2 = l0 + 2*inck
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      END IF
      END

