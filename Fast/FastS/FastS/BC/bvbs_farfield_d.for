C        Generated by TAPENADE     (INRIA, Ecuador team)
C  Tapenade 3.13 (r6666M) - 28 May 2018 09:28
C
C  Differentiation of bvbs_farfield in forward (tangent) mode:
C   variations   of useful results: rop
C   with respect to varying inputs: rop
C   RW status of diff variables: rop:in-out
C
C
C
C
C
C
C
C
C
C
C
C***********************************************************************
C     $Date: 2013-08-26 16:00:23 +0200 (lun. 26 ao√ªt 2013) $
C     $Revision: 35 $
C     $Author: IvanMary $
C***********************************************************************
      SUBROUTINE BVBS_FARFIELD_D(idir, lrhs, neq_mtr, param_int, 
     +                           ind_loop, param_real, c4, c5, c6, 
     +                           ventijk, tijk, rop, ropd, state)
      IMPLICIT NONE
C
CSeule la valeur de k_vent et ck_vent a un sens dans cet appel
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
      INTEGER*4 idir, lrhs, neq_mtr, ind_loop(6), param_int(0:*)
C
      REAL*8 rop(param_int(41), param_int(36))
      REAL*8 ropd(param_int(41), param_int(36))
      REAL*8 ventijk(param_int(44), param_int(40))
      REAL*8 tijk(param_int(43), neq_mtr)
      REAL*8 state(param_int(36))
      REAL*8 c4, c5, c6, param_real(0:*)
C
C Var local
      INTEGER*4 l, lij, lr, lp, i, j, k, l1, l2, ic, jc, kc, kc_vent, 
     +          ldp, lmtr, l0, incj, inck
      REAL*8 ro, u, v, w, t, nut, c6inv, c0, c1, c2, c3, roe, rue, rve, 
     +       rwe, ete, ci_mtr, cj_mtr, ck_mtr, ck_vent, c_ale, tcx, tcy
     +       , tcz, qref1, qref2, qref3, qref4, qref5, r, p, c, ci, 
     +       snorm, nue, gamm1, gamm1_1, cvinv, sni, tn, qn, qen, eigv1
     +       , eigv2, eigv3, eigv4, eigv5, qvar1, qvar2, qvar3, qvar4, 
     +       qvar5, svar1, svar2, svar3, svar4, svar5, rvar1, rvar2, 
     +       rvar3, rvar4, rvar5, roext, ruext, rvext, rwext, etext, 
     +       roint, ruint, rvint, rwint, etint, s_1, roi, rui, rvi, rwi
     +       , eti
      REAL*8 tnx, tny, ri, roinv, sn
      REAL*8 ud, vd, wd, qref1d, qref2d, qref3d, qref4d, qref5d, rd, pd
     +       , cd, cid, qvar1d, qvar2d, qvar3d, qvar4d, qvar5d, svar1d, 
     +       svar2d, svar3d, svar4d, svar5d, rvar1d, rvar2d, rvar3d, 
     +       rvar4d, rvar5d, roextd, ruextd, rvextd, rwextd, etextd, 
     +       rointd, ruintd, rvintd, rwintd, etintd, roid, ruid, rvid, 
     +       rwid, etid, rid, roinvd
C
C    adresse point courant pour tableau de la taille d'un domaine 
      INTEGER_E inddm, i_1, j_1, k_1
C    adresse interface pour tableau metric
      INTEGER_E indmtr, i_3, j_3, k_3
C    adresse interface pour tableau vitesse entrainement
      INTEGER_E indven, i_4, j_4, k_4
      EXTERNAL SHAPE_TAB_MTR
      INTRINSIC MOD
      INTRINSIC SQRT
      INTRINSIC ABS
      REAL*8 abs0
      REAL*8 abs1
      REAL*8 abs2
      REAL*8 abs3
      REAL*8 abs4
      REAL*8 abs5
      REAL*8 arg1
      REAL*8 arg1d
C
C......determine la forme des tableuz metrique en fonction de la nature du domaine
      CALL SHAPE_TAB_MTR(neq_mtr, param_int, idir, ic, jc, kc, kc_vent, 
     +                   ci_mtr, cj_mtr, ck_mtr, ck_vent, c_ale)
Cif(idir.eq.1.or.idir.eq.2) return
Cif(idir.ne.1) return
Cwrite(*,*)'neq_vent=', param_int(40), param_int(44)
C
C      write(*,*)'idir=', idir,nijk(4),nijk(5),param_int(41)
C      write(*,*)'nijk=', nijk
C      write(*,*)'loop=', ind_loop
C
C
C
      snorm = -1.
C!! premiere rangee = state
C!! rangee suivante pour que : Phi_L + Phi_R = 2 * state
      IF (MOD(idir, 2) .EQ. 0) snorm = 1.
C
C
C
      roe = state(1)
      rue = state(2)
      rve = state(3)
      rwe = state(4)
      ete = state(5)
      IF (param_int(36) .EQ. 6) nue = state(6)/roe
C
      gamm1 = param_real(1) - 1.
      gamm1_1 = 1./gamm1
      cvinv = 1./param_real(2)
C
      c0 = 1./c6
      c1 = -((c4+c5)*c0)
      c2 = -(c6*c0)
      c3 = (2.-c5-c4)*c0
Cidir
C
      IF (idir .EQ. 1) THEN
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO k=ind_loop(5),ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
C
              l = 1 + (ind_loop(2)+param_int(0+3)-1) + (j+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lmtr = 1 + (ind_loop(2)+1+param_int(5+3)-1)*param_int(5) +
     +          (j+param_int(5+3)-1)*param_int(5+1) + (k+param_int(5+4)-
     +          1)*param_int(5+2)
              ldp = 1 + (ind_loop(2)+1+param_int(15+3)-1)*param_int(15) 
     +          + (j+param_int(15+3)-1)*param_int(15+1) + (k+param_int(
     +          15+4)-1)*param_int(15+2)
              l1 = l + 1
C
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
C
C
              l0 = l
              l2 = l + 2
              DO i=ind_loop(1),ind_loop(2)-1
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs0 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs0 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs0 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
C
C
C
          DO k=ind_loop(5),ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
C
              l = 1 + (ind_loop(2)+param_int(0+3)-1) + (j+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lmtr = 1 + (ind_loop(2)+1+param_int(5+3)-1)*param_int(5) +
     +          (j+param_int(5+3)-1)*param_int(5+1) + (k+param_int(5+4)-
     +          1)*param_int(5+2)
              ldp = 1 + (ind_loop(2)+1+param_int(15+3)-1)*param_int(15) 
     +          + (j+param_int(15+3)-1)*param_int(15+1) + (k+param_int(
     +          15+4)-1)*param_int(15+2)
              l1 = l + 1
C
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
C
C
              IF (eigv1 .LT. 0.) THEN
                ropd(l, 6) = 0.D0
              ELSE
                ropd(l, 6) = ropd(l1, 6)
              END IF
C
              l0 = l
              l2 = l + 2
              DO i=ind_loop(1),ind_loop(2)-1
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE IF (idir .EQ. 2) THEN
C
C
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
C
          DO k=ind_loop(5),ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
C
              l = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lmtr = 1 + (ind_loop(1)+param_int(5+3)-1)*param_int(5) + (
     +          j+param_int(5+3)-1)*param_int(5+1) + (k+param_int(5+4)-1
     +          )*param_int(5+2)
              ldp = 1 + (ind_loop(1)+param_int(15+3)-1)*param_int(15) + 
     +          (j+param_int(15+3)-1)*param_int(15+1) + (k+param_int(15+
     +          4)-1)*param_int(15+2)
              l1 = l - 1
              ldp = l
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
C
C
              l0 = l
              l2 = l - 2
              DO i=ind_loop(1)+1,ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs1 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs1 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs1 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
C
C
          DO k=ind_loop(5),ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
C
              l = 1 + (ind_loop(1)+param_int(0+3)-1) + (j+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lmtr = 1 + (ind_loop(1)+param_int(5+3)-1)*param_int(5) + (
     +          j+param_int(5+3)-1)*param_int(5+1) + (k+param_int(5+4)-1
     +          )*param_int(5+2)
              ldp = 1 + (ind_loop(1)+param_int(15+3)-1)*param_int(15) + 
     +          (j+param_int(15+3)-1)*param_int(15+1) + (k+param_int(15+
     +          4)-1)*param_int(15+2)
              l1 = l - 1
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
C
C
              IF (eigv1 .LT. 0.) THEN
                ropd(l, 6) = 0.D0
              ELSE
                ropd(l, 6) = ropd(l1, 6)
              END IF
C
              l0 = l
              l2 = l - 2
              DO i=ind_loop(1)+1,ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE IF (idir .EQ. 3) THEN
C
C
C
C
        incj = param_int(0)
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO k=ind_loop(5),ind_loop(6)
CDEC$ IVDEP
            DO i=ind_loop(1),ind_loop(2)
C
              l = 1 + (i+param_int(0+3)-1) + (ind_loop(4)+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lmtr = 1 + (i+param_int(5+3)-1)*param_int(5) + (ind_loop(4
     +          )+1+param_int(5+3)-1)*param_int(5+1) + (k+param_int(5+4)
     +          -1)*param_int(5+2)
              ldp = 1 + (i+param_int(15+3)-1)*param_int(15) + (ind_loop(
     +          4)+1+param_int(15+3)-1)*param_int(15+1) + (k+param_int(
     +          15+4)-1)*param_int(15+2)
              l1 = l + incj
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
            ENDDO
C
Ci
C
            DO j=ind_loop(3),ind_loop(4)-1
CDEC$ IVDEP
              DO i=ind_loop(1),ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                l0 = 1 + (i+param_int(0+3)-1) + (ind_loop(4)+param_int(0
     +            +3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0
     +            )*param_int(0+1)
                l1 = l0 + incj
                l2 = l0 + 2*incj
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs2 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs2 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs2 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
Ci
Cj
Ck
C
C
          DO k=ind_loop(5),ind_loop(6)
CDEC$ IVDEP
            DO i=ind_loop(1),ind_loop(2)
C
              l = 1 + (i+param_int(0+3)-1) + (ind_loop(4)+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lmtr = 1 + (i+param_int(5+3)-1)*param_int(5) + (ind_loop(4
     +          )+1+param_int(5+3)-1)*param_int(5+1) + (k+param_int(5+4)
     +          -1)*param_int(5+2)
              ldp = 1 + (i+param_int(15+3)-1)*param_int(15) + (ind_loop(
     +          4)+1+param_int(15+3)-1)*param_int(15+1) + (k+param_int(
     +          15+4)-1)*param_int(15+2)
              l1 = l + incj
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
C
C
              IF (eigv1 .LT. 0.) THEN
                ropd(l, 6) = 0.D0
              ELSE
                ropd(l, 6) = ropd(l1, 6)
              END IF
            ENDDO
Ci
C
            DO j=ind_loop(3),ind_loop(4)-1
CDEC$ IVDEP
              DO i=ind_loop(1),ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                l0 = 1 + (i+param_int(0+3)-1) + (ind_loop(4)+param_int(0
     +            +3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0
     +            )*param_int(0+1)
                l1 = l0 + incj
                l2 = l0 + 2*incj
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE IF (idir .EQ. 4) THEN
C
Ci
Cj
Ck
C
C
C
        incj = -param_int(0)
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO k=ind_loop(5),ind_loop(6)
CDEC$ IVDEP
            DO i=ind_loop(1),ind_loop(2)
C
              l = 1 + (i+param_int(0+3)-1) + (ind_loop(3)+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lmtr = 1 + (i+param_int(5+3)-1)*param_int(5) + (ind_loop(3
     +          )+param_int(5+3)-1)*param_int(5+1) + (k+param_int(5+4)-1
     +          )*param_int(5+2)
              ldp = 1 + (i+param_int(15+3)-1)*param_int(15) + (ind_loop(
     +          3)+param_int(15+3)-1)*param_int(15+1) + (k+param_int(15+
     +          4)-1)*param_int(15+2)
              l1 = l + incj
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
            ENDDO
C
Ci
C
            DO j=ind_loop(3)+1,ind_loop(4)
CDEC$ IVDEP
              DO i=ind_loop(1),ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                l0 = 1 + (i+param_int(0+3)-1) + (ind_loop(3)+param_int(0
     +            +3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0
     +            )*param_int(0+1)
                l1 = l0 + incj
                l2 = l0 + 2*incj
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs3 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs3 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs3 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
Ci
Cj
Ck
C
C
          DO k=ind_loop(5),ind_loop(6)
CDEC$ IVDEP
            DO i=ind_loop(1),ind_loop(2)
C
              l = 1 + (i+param_int(0+3)-1) + (ind_loop(3)+param_int(0+3)
     +          -1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +          param_int(0+1)
              lmtr = 1 + (i+param_int(5+3)-1)*param_int(5) + (ind_loop(3
     +          )+param_int(5+3)-1)*param_int(5+1) + (k+param_int(5+4)-1
     +          )*param_int(5+2)
              ldp = 1 + (i+param_int(15+3)-1)*param_int(15) + (ind_loop(
     +          3)+param_int(15+3)-1)*param_int(15+1) + (k+param_int(15+
     +          4)-1)*param_int(15+2)
              l1 = l + incj
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
C
C
              IF (eigv1 .LT. 0.) THEN
                ropd(l, 6) = 0.D0
              ELSE
                ropd(l, 6) = ropd(l1, 6)
              END IF
            ENDDO
Ci
C
            DO j=ind_loop(3)+1,ind_loop(4)
CDEC$ IVDEP
              DO i=ind_loop(1),ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                l0 = 1 + (i+param_int(0+3)-1) + (ind_loop(3)+param_int(0
     +            +3)-1)*param_int(0) + (k+param_int(0+4)-1)*param_int(0
     +            )*param_int(0+1)
                l1 = l0 + incj
                l2 = l0 + 2*incj
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE IF (idir .EQ. 5) THEN
C
Ci
Cj
Ck
C
C
C
C
        inck = param_int(0)*param_int(0+1)
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO j=ind_loop(3),ind_loop(4)
CDEC$ IVDEP
            DO i=ind_loop(1),ind_loop(2)
C
              l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +          param_int(0) + (ind_loop(6)+param_int(0+4)-1)*param_int(
     +          0)*param_int(0+1)
              lmtr = 1 + (i+param_int(5+3)-1)*param_int(5) + (j+
     +          param_int(5+3)-1)*param_int(5+1) + (ind_loop(6)+1+
     +          param_int(5+4)-1)*param_int(5+2)
              ldp = 1 + (i+param_int(15+3)-1)*param_int(15) + (j+
     +          param_int(15+3)-1)*param_int(15+1) + (ind_loop(6)+1+
     +          param_int(15+4)-1)*param_int(15+2)
              l1 = l + inck
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
            ENDDO
          ENDDO
C
C
          DO k=ind_loop(5),ind_loop(6)-1
            DO j=ind_loop(3),ind_loop(4)
CDEC$ IVDEP
              DO i=ind_loop(1),ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                l0 = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (ind_loop(6)+param_int(0+4)-1)*
     +            param_int(0)*param_int(0+1)
                l1 = l0 + inck
                l2 = l0 + 2*inck
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs4 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs4 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs4 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
C
C
          DO j=ind_loop(3),ind_loop(4)
CDEC$ IVDEP
            DO i=ind_loop(1),ind_loop(2)
C
              l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +          param_int(0) + (ind_loop(6)+param_int(0+4)-1)*param_int(
     +          0)*param_int(0+1)
              lmtr = 1 + (i+param_int(5+3)-1)*param_int(5) + (j+
     +          param_int(5+3)-1)*param_int(5+1) + (ind_loop(6)+1+
     +          param_int(5+4)-1)*param_int(5+2)
              ldp = 1 + (i+param_int(15+3)-1)*param_int(15) + (j+
     +          param_int(15+3)-1)*param_int(15+1) + (ind_loop(6)+1+
     +          param_int(15+4)-1)*param_int(15+2)
              l1 = l + inck
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
C
C
              IF (eigv1 .LT. 0.) THEN
                ropd(l, 6) = 0.D0
              ELSE
                ropd(l, 6) = ropd(l1, 6)
              END IF
            ENDDO
          ENDDO
C
          DO k=ind_loop(5),ind_loop(6)-1
            DO j=ind_loop(3),ind_loop(4)
CDEC$ IVDEP
              DO i=ind_loop(1),ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                l0 = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (ind_loop(6)+param_int(0+4)-1)*
     +            param_int(0)*param_int(0+1)
                l1 = l0 + inck
                l2 = l0 + 2*inck
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      ELSE
C
C
C
C
C
        inck = -(param_int(0)*param_int(0+1))
Cparam_int(36)
C
        IF (param_int(36) .EQ. 5) THEN
C
          DO j=ind_loop(3),ind_loop(4)
CDEC$ IVDEP
            DO i=ind_loop(1),ind_loop(2)
C
              l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +          param_int(0) + (ind_loop(5)+param_int(0+4)-1)*param_int(
     +          0)*param_int(0+1)
              lmtr = 1 + (i+param_int(5+3)-1)*param_int(5) + (j+
     +          param_int(5+3)-1)*param_int(5+1) + (ind_loop(5)+
     +          param_int(5+4)-1)*param_int(5+2)
              ldp = 1 + (i+param_int(15+3)-1)*param_int(15) + (j+
     +          param_int(15+3)-1)*param_int(15+1) + (ind_loop(6)+
     +          param_int(15+4)-1)*param_int(15+2)
              l1 = l + inck
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
            ENDDO
          ENDDO
C
C
          DO k=ind_loop(5)+1,ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
CDEC$ IVDEP
              DO i=ind_loop(1),ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                l0 = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (ind_loop(5)+param_int(0+4)-1)*
     +            param_int(0)*param_int(0+1)
                l1 = l0 + inck
                l2 = l0 + 2*inck
Cif(rop(l,1).le.0.3*rop(l0,1)) then  ! protection pour eviter valeur negative de ro et t
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
                IF (rop(l, 1)/rop(l0, 1) - 1. .GE. 0.) THEN
                  abs5 = rop(l, 1)/rop(l0, 1) - 1.
                ELSE
                  abs5 = -(rop(l, 1)/rop(l0, 1)-1.)
                END IF
C
C
                IF (abs5 .GE. 0.7) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                END IF
              ENDDO
            ENDDO
          ENDDO
        ELSE
C
C
C
          DO j=ind_loop(3),ind_loop(4)
CDEC$ IVDEP
            DO i=ind_loop(1),ind_loop(2)
C
              l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +          param_int(0) + (ind_loop(5)+param_int(0+4)-1)*param_int(
     +          0)*param_int(0+1)
              lmtr = 1 + (i+param_int(5+3)-1)*param_int(5) + (j+
     +          param_int(5+3)-1)*param_int(5+1) + (ind_loop(5)+
     +          param_int(5+4)-1)*param_int(5+2)
              ldp = 1 + (i+param_int(15+3)-1)*param_int(15) + (j+
     +          param_int(15+3)-1)*param_int(15+1) + (ind_loop(6)+
     +          param_int(15+4)-1)*param_int(15+2)
              l1 = l + inck
              tcx = tijk(lmtr, ic)*ci_mtr*snorm
              tcy = tijk(lmtr, jc)*cj_mtr*snorm
              tcz = tijk(lmtr, kc)*ck_mtr*snorm
C
              arg1 = tcx*tcx + tcy*tcy + tcz*tcz
              sn = SQRT(arg1)
C
              roid = ropd(l1, 1)
              roi = rop(l1, 1)
              ruid = ropd(l1, 2)*roi + rop(l1, 2)*roid
              rui = rop(l1, 2)*roi
              rvid = ropd(l1, 3)*roi + rop(l1, 3)*roid
              rvi = rop(l1, 3)*roi
              rwid = ropd(l1, 4)*roi + rop(l1, 4)*roid
              rwi = rop(l1, 4)*roi
              etid = param_real(2)*(ropd(l1, 5)*roi+rop(l1, 5)*roid) + (
     +          .5*(ruid*rui+rui*ruid+rvid*rvi+rvi*rvid+rwid*rwi+rwi*
     +          rwid)*roi-.5*(rui*rui+rvi*rvi+rwi*rwi)*roid)/roi**2
              eti = rop(l1, 5)*param_real(2)*roi + .5*(rui*rui+rvi*rvi+
     +          rwi*rwi)/roi
C
C Vitesse entrainement interieure
C
              qen = (ventijk(ldp, 1)*tcx+ventijk(ldp, 2)*tcy+ventijk(ldp
     +          , kc_vent)*tcz*ck_vent)*c_ale
C
C
C-----Define average of inside and outside conditions
C     as linearization state
C
              qref1d = .5*roid
              qref1 = .5*(roe+roi)
              qref2d = .5*ruid
              qref2 = .5*(rue+rui)
              qref3d = .5*rvid
              qref3 = .5*(rve+rvi)
              qref4d = .5*rwid
              qref4 = .5*(rwe+rwi)
              qref5d = .5*etid
              qref5 = .5*(ete+eti)
C     
              rd = qref1d
              r = qref1
              rid = -(rd/r**2)
              ri = 1./r
              ud = qref2d*ri + qref2*rid
              u = qref2*ri
              vd = qref3d*ri + qref3*rid
              v = qref3*ri
              wd = qref4d*ri + qref4*rid
              w = qref4*ri
              pd = gamm1*(qref5d-.5*(rd*(u*u+v*v+w*w)+r*(ud*u+u*ud+vd*v+
     +          v*vd+wd*w+w*wd)))
              p = gamm1*(qref5-.5*r*(u*u+v*v+w*w))
              arg1d = param_real(1)*(pd*ri+p*rid)
              arg1 = param_real(1)*p*ri
              IF (arg1 .EQ. 0.0) THEN
                cd = 0.D0
              ELSE
                cd = arg1d/(2.0*SQRT(arg1))
              END IF
              c = SQRT(arg1)
              cid = -(cd/c**2)
              ci = 1./c
              s_1 = 1./sn
              qn = tcx*u + tcy*v + tcz*w - qen
C
              IF (sn .EQ. 0.) THEN
                tnx = 1.
                tny = 0.
              ELSE
                tnx = tcx/sn
                tny = tcy/sn
              END IF
C
C-----Compute eigenvalues from the average state
C
              eigv1 = qn
              eigv2 = qn
              eigv3 = qn
              eigv4 = qn + sn*c
              eigv5 = qn - sn*c
C
C-----Transform outside conditions to characteristic variables
C
              qvar1 = roe
              qvar2 = rue
              qvar3 = rve
              qvar4 = rwe
              qvar5 = ete
C
C-----Transforms from ordinary to characteristic variables
C
              svar1 = qvar1
              svar2d = (qvar2-u*qvar1)*rid - qvar1*ud*ri
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3-v*qvar1)*rid - qvar1*vd*ri
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4-w*qvar1)*rid - qvar1*wd*ri
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*qvar1*(ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)-
     +          qvar2*ud-qvar3*vd-qvar4*wd)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = -(2*ci*cid*svar5) - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
              roextd = rvar1d
              roext = rvar1
              ruextd = rvar2d
              ruext = rvar2
              rvextd = rvar3d
              rvext = rvar3
              rwextd = rvar4d
              rwext = rvar4
              etextd = rvar5d
              etext = rvar5
C
C-----Transform inside conditions to characteristic variables
C
              qvar1d = roid
              qvar1 = roi
              qvar2d = ruid
              qvar2 = rui
              qvar3d = rvid
              qvar3 = rvi
              qvar4d = rwid
              qvar4 = rwi
              qvar5d = etid
              qvar5 = eti
C
C-----Transforms from ordinary to characteristic variables
C
              svar1d = qvar1d
              svar1 = qvar1
              svar2d = (qvar2d-ud*qvar1-u*qvar1d)*ri + (qvar2-u*qvar1)*
     +          rid
              svar2 = (qvar2-u*qvar1)*ri
              svar3d = (qvar3d-vd*qvar1-v*qvar1d)*ri + (qvar3-v*qvar1)*
     +          rid
              svar3 = (qvar3-v*qvar1)*ri
              svar4d = (qvar4d-wd*qvar1-w*qvar1d)*ri + (qvar4-w*qvar1)*
     +          rid
              svar4 = (qvar4-w*qvar1)*ri
              svar5d = gamm1*(.5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*qvar1+
     +          (u*u+v*v+w*w)*qvar1d)-ud*qvar2-u*qvar2d-vd*qvar3-v*
     +          qvar3d-wd*qvar4-w*qvar4d+qvar5d)
              svar5 = gamm1*(.5*(u*u+v*v+w*w)*qvar1-u*qvar2-v*qvar3-w*
     +          qvar4+qvar5)
C
              rvar1d = svar1d - 2*ci*cid*svar5 - ci**2*svar5d
              rvar1 = svar1 - ci**2*svar5
              rvar2d = tcz*s_1*(tnx*svar2d+tny*svar3d) - svar4d
              rvar2 = tcz*s_1*(tnx*svar2+tny*svar3) - svar4
              rvar3d = tnx*svar3d - tny*svar2d
              rvar3 = -(tny*svar2) + tnx*svar3
              rvar4d = .5*s_1*(tcx*svar2d+tcy*svar3d+tcz*svar4d) + .5*((
     +          rid*ci+ri*cid)*svar5+ri*ci*svar5d)
              rvar4 = .5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4) + .5*ri*ci*
     +          svar5
              rvar5d = .5*((rid*ci+ri*cid)*svar5+ri*ci*svar5d) - .5*s_1*
     +          (tcx*svar2d+tcy*svar3d+tcz*svar4d)
              rvar5 = -(.5*s_1*(tcx*svar2+tcy*svar3+tcz*svar4)) + .5*ri*
     +          ci*svar5
C
C
              rointd = rvar1d
              roint = rvar1
              ruintd = rvar2d
              ruint = rvar2
              rvintd = rvar3d
              rvint = rvar3
              rwintd = rvar4d
              rwint = rvar4
              etintd = rvar5d
              etint = rvar5
C
C-----Choose char. var. from inside or outside depending
C     on sign of corresponding eigenvalue
C
              rvar1d = rointd
              rvar1 = roint
              IF (eigv1 .LT. 0.) THEN
                rvar1d = roextd
                rvar1 = roext
              END IF
              rvar2d = ruintd
              rvar2 = ruint
              IF (eigv2 .LT. 0.) THEN
                rvar2d = ruextd
                rvar2 = ruext
              END IF
              rvar3d = rvintd
              rvar3 = rvint
              IF (eigv3 .LT. 0.) THEN
                rvar3d = rvextd
                rvar3 = rvext
              END IF
              rvar4d = rwintd
              rvar4 = rwint
              IF (eigv4 .LT. 0.) THEN
                rvar4d = rwextd
                rvar4 = rwext
              END IF
              rvar5d = etintd
              rvar5 = etint
              IF (eigv5 .LT. 0.) THEN
                rvar5d = etextd
                rvar5 = etext
              END IF
C
C
C-----Transforms from characteristic to ordinary variables
C
              svar1d = rvar1d + (rd*ci+r*cid)*(rvar4+rvar5) + r*ci*(
     +          rvar4d+rvar5d)
              svar1 = rvar1 + r*ci*(rvar4+rvar5)
              svar2d = tcz*s_1*tnx*rvar2d - tny*rvar3d + tcx*s_1*(rvar4d
     +          -rvar5d)
              svar2 = tcz*s_1*tnx*rvar2 - tny*rvar3 + tcx*s_1*(rvar4-
     +          rvar5)
              svar3d = tcz*s_1*tny*rvar2d + tnx*rvar3d + tcy*s_1*(rvar4d
     +          -rvar5d)
              svar3 = tcz*s_1*tny*rvar2 + tnx*rvar3 + tcy*s_1*(rvar4-
     +          rvar5)
              svar4d = tcz*s_1*(rvar4d-rvar5d) - rvar2d
              svar4 = -rvar2 + tcz*s_1*(rvar4-rvar5)
              svar5d = (rd*c+r*cd)*(rvar4+rvar5) + r*c*(rvar4d+rvar5d)
              svar5 = r*c*(rvar4+rvar5)
C
Croinv = 1./svar1
Cu  = u + r*svar2*roinv
Cv  = v + r*svar3*roinv
Cw  = w + r*svar4*roinv
              qvar5d = .5*((ud*u+u*ud+vd*v+v*vd+wd*w+w*wd)*svar1+(u*u+v*
     +          v+w*w)*svar1d) + rd*(u*svar2+v*svar3+w*svar4) + r*(ud*
     +          svar2+u*svar2d+vd*svar3+v*svar3d+wd*svar4+w*svar4d) + 
     +          gamm1_1*svar5d
              qvar5 = .5*(u*u+v*v+w*w)*svar1 + r*(u*svar2+v*svar3+w*
     +          svar4) + gamm1_1*svar5
C
C
C
C
              roinvd = -(svar1d/svar1**2)
              roinv = 1./svar1
C
              ud = ud + (rd*svar2+r*svar2d)*roinv + r*svar2*roinvd
              u = u + r*svar2*roinv
              vd = vd + (rd*svar3+r*svar3d)*roinv + r*svar3*roinvd
              v = v + r*svar3*roinv
              wd = wd + (rd*svar4+r*svar4d)*roinv + r*svar4*roinvd
              w = w + r*svar4*roinv
C
C
              ropd(l, 1) = svar1d
              ropd(l, 2) = ud
              ropd(l, 3) = vd
              ropd(l, 4) = wd
              ropd(l, 5) = cvinv*(qvar5d*roinv+qvar5*roinvd-.5*(ud*u+u*
     +          ud+vd*v+v*vd+wd*w+w*wd))
C
C
              IF (eigv1 .LT. 0.) THEN
                ropd(l, 6) = 0.D0
              ELSE
                ropd(l, 6) = ropd(l1, 6)
              END IF
            ENDDO
          ENDDO
C
          DO k=ind_loop(5)+1,ind_loop(6)
            DO j=ind_loop(3),ind_loop(4)
CDEC$ IVDEP
              DO i=ind_loop(1),ind_loop(2)
C
                l = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (k+param_int(0+4)-1)*param_int(0)*
     +            param_int(0+1)
                l0 = 1 + (i+param_int(0+3)-1) + (j+param_int(0+3)-1)*
     +            param_int(0) + (ind_loop(5)+param_int(0+4)-1)*
     +            param_int(0)*param_int(0+1)
                l1 = l0 + inck
                l2 = l0 + 2*inck
                ropd(l, 1) = c3*ropd(l0, 1) + c1*ropd(l1, 1) + c2*ropd(
     +            l2, 1)
C
                IF (rop(l, 1) .LE. 0.3*rop(l0, 1)) THEN
C protection pour eviter valeur negative de ro et t
                  ropd(l, 1) = ropd(l0, 1)
                  ropd(l, 2) = ropd(l0, 2)
                  ropd(l, 3) = ropd(l0, 3)
                  ropd(l, 4) = ropd(l0, 4)
                  ropd(l, 5) = ropd(l0, 5)
                  ropd(l, 6) = ropd(l0, 6)
                ELSE
                  ropd(l, 2) = c3*ropd(l0, 2) + c1*ropd(l1, 2) + c2*ropd
     +              (l2, 2)
                  ropd(l, 3) = c3*ropd(l0, 3) + c1*ropd(l1, 3) + c2*ropd
     +              (l2, 3)
                  ropd(l, 4) = c3*ropd(l0, 4) + c1*ropd(l1, 4) + c2*ropd
     +              (l2, 4)
                  ropd(l, 5) = c3*ropd(l0, 5) + c1*ropd(l1, 5) + c2*ropd
     +              (l2, 5)
                  ropd(l, 6) = c3*ropd(l0, 6) + c1*ropd(l1, 6) + c2*ropd
     +              (l2, 6)
                END IF
              ENDDO
            ENDDO
          ENDDO
        END IF
      END IF
      END

